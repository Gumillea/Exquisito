plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = "${mod_version}"
group = "${group}"
archivesBaseName = "${mod_id}-${minecraft_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.2'
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', '${mod_id}'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', '${mod_id}'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', '${mod_id}'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'exquisito', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                exquisito {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {url = "https://www.cursemaven.com"}
    maven {url = "https://maven.jaackson.me"}
    maven {url = "https://dvs1.progwml6.com/files/maven/" }
    maven {url = "https://modmaven.k-4u.nl" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.8'

    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:11.6.0.1015")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:11.6.0.1015")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:11.6.0.1015")
    runtimeOnly fg.deobf("curse.maven:appleskin-248787:3927567")

    implementation fg.deobf("curse.maven:neapolitan-382016:4023083")
    implementation fg.deobf("curse.maven:blueprint-382216:4442628")

    implementation fg.deobf("curse.maven:enlightend-502786:4731540")
    implementation fg.deobf("curse.maven:farmers-delight-398521:4679318")
    implementation fg.deobf("curse.maven:ends-delight-662675:4675407")
    implementation fg.deobf("curse.maven:unusual-end-617757:4549776")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_id}",
                "Specification-Vendor"    : "exquisitosareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "exquisitosareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
